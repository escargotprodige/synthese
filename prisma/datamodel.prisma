type User {
  id: ID! @id
  name: String!
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  VERY_RARE
  LEGENDARY
}

type Brand {
  id: ID! @id
  name: String!
  weapons: [WeaponBase]
  weaponParts: [WeaponPart]
}

enum WeaponType {
  PISTOL
  SHOTGUN
  ASSAULT_RIFLE
  SNIPER
  ROCKET_LAUNCHER
  SMG
}

enum WeaponPartType {
  BODY
  BARREL
  ACCESSORY
  ELEMENTAL
  SIGHT
  GRIP
  STOCK
}

enum ModifierType {
  SCALE
  PRE_ADD
}

type Attributes @embedded {
  weaponAdditionalRicochets: Float
  weaponAutomaticBurstCount: Float
  weaponBaseStatusEffectChanceModifier: Float
  weaponBurstInterval: Float
  weaponClipSize: Float
  weaponCombinedStatusEffectChanceModifier: Float
  weaponCurrentBurstShotCount: Float
  weaponDamage: Float
  weaponEquipTime: Float
  weaponExtraShotChance: Float
  weaponMeleeDamage: Float
  weaponPerShotAccuracyImpulse: Float
  weaponProjectileSpeedMultiplier: Float
  weaponProjectilesPerShot: Float
  weaponReloadSpeed: Float
  weaponShotCost: Float
  weaponSpread: Float
  weaponStatusEffectChanceModifier: Float
  weaponStatusEffectDamage: Float
}

type WeaponBase {
  id: ID! @id
  brand: Brand @relation(link: INLINE)
  weaponType: WeaponType!
  attributes: Attributes!
}

type WeaponPart {
  id: ID! @id
  effects: [Effect]
  prefix: String
  titles: [Title]
  brand: Brand @relation(link: INLINE)
  weaponType: WeaponType
  partType: WeaponPartType
}

type Title @embedded {
  id: ID! @id
  name: String!
  brand: Brand
}

type Prefix @embedded {
  id: ID! @id
  name: String!
  priority: Int!
}

type Effect @embedded {
  id: ID! @id
  attributeToModify: String!
  modifierType: ModifierType!
  baseValueConstant: Float
}
