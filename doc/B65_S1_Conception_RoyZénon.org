#+OPTIONS: toc:nil title:nil num:nil
#+BEGIN_EXPORT latex
\begin{titlepage}
\centering
{\scshape\LARGE Cégep du Vieux Montréal \par}
\vspace{1cm}
{\scshape\LARGE Projet Synthèse\par}
\vspace{1.5cm}
{\huge\bfseries Calculatrice de statistiques d'items pour le jeu Borderlands 2\par}
\vspace{2cm}
{\Large\itshape Zénon Roy\par}
\vfill
Travail à remettre à\par
Jean-Christophe Demers
\vfill
	{\large Hiver 2019\par}
\end{titlepage}
#+END_EXPORT
* Présentation générale du projet
Dans le jeu Borderlands 2, les items sont générés aléatoirement.
Les items sont composés de pièces qui proviennent des différents fabriquants d'armes dans le jeu.
Chaque pièce a une influence sur les statistiques finales de l'item (dommage, balles par seconde, munitions, etc).
Le but du projet est de concevoir un site qui permet de calculer les statistiques finales d'un item en choisissant les pièces qui le compose.
* Présentation précise du projet
Le projet est divisé en deux parties: le serveur et le client web.
** Le serveur
   Le serveur utilise la plateforme NodeJS et a plusieurs responsabilités:
   - API GraphQL
     - Faire des opérations CRUD sur le modèle (voir diagramme bd)
     - Calculer les statistiques des items
   - "Server-Side Rendering" avec [[https://nuxtjs.org/][Nuxt]] (gestion de la vue)
   - [[https://www.prisma.io][Prisma]] pour la gestion des données (communique avec MongoDB)
** Le client web
   Le client web communique avec l'API avec une interface simple à utiliser. Il permet de:
  - Sélectionner les pièces d'un item et faire la requête sur le serveur
  - Voir les statistiques d'un item selon les pièces choisies
  - Consulter et modifier les données des pièces
  - Consulter et modifier les statistiques de base des items
  - Utilise la librairie [[https://vue-apollo.netlify.com/][Vue-Apollo]] pour faire des requêtes sur le serveur
  - Utilise la librairie [[https://vuetifyjs.com/en/][Vuetify]] pour une présentation avec le style Material Design
** Fonctionnement des items 
   
* Présentation des patrons de conceptions envisagés
** MVVM (Modele - Vue - Vue-Modele)
** GraphQL
* Aspects techniques de la conception
** cas d'usage
** diagramme de base de données
   [[./bd.png]]
** conception des interfaces usagers
*** Page principale / calcul des statistiques
*** liste des pièces
    [[./liste-parties.png]]
*** liste des templates
*** détails d'une pièce
*** détails template
